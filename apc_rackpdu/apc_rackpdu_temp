#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# APC Temp Check
# 27.03.2014 by Roland Mueller
#
apc_rackpdu_temp_defaultlevels = (31.0, 35.0)

def inventory_apc_rackpdu_temp(info):
    #debug
    #import pprint ; pprint.pprint(info)
    #return []
    inventory = []
    #for state in info:
    for state in info:
        if (state[0]):
            inventory.append((None, state, apc_rackpdu_temp_defaultlevels))
    return inventory


def check_apc_rackpdu_temp(item, params, info):
    warn, crit = params
    for state in info:
        temp = float(state[0])/10.0
        perfdata = [("temp", temp, warn, crit)]
        if temp >= crit:
            return (2, "CRITICAL - Temperature is %.1f" % temp, perfdata)
        elif temp >= warn:
            return (1, "WARNING - Temperature is %.1f" % temp, perfdata)
        else:
            return (0, "OK - Temperature is %.1f" % temp, perfdata)
    return (3, "UNKNOWN - No Information about Temperature", perfdata)

check_info['apc_rackpdu_temp'] = {
    'check_function': check_apc_rackpdu_temp,
    'service_description': "Temperature",
    'inventory_function': inventory_apc_rackpdu_temp,
    'has_perfdata': True,
}

snmp_info['apc_rackpdu_temp']  = ( ".1.3.6.1.4.1.318.1.1.26.10.2.2.1.8", ['1'] )

snmp_scan_functions['apc_rackpdu_temp'] = lambda oid: oid(".1.3.6.1.2.1.1.1.0").lower().startswith("apc web/snmp") and oid(".1.3.6.1.4.1.318.1.1.12.1.1.0")
